// Generated by CoffeeScript 1.6.3
(function() {
  var peer_template, updateItem, updateUI, urlArr, urlMap,
    _this = this;

  urlMap = {};

  urlArr = [];

  console.log(Handlebars.templates);

  peer_template = Handlebars.templates["active_peer_site"];

  updateItem = function(url, peer_count) {
    var ind;
    if (!urlMap[url]) {
      urlMap[url] = {
        "url": url,
        "peer_count": peer_count
      };
      urlArr.push(urlMap[url]);
    }
    urlMap[url].peer_count = peer_count;
    if (peer_count === 0) {
      ind = urlArr.indexOf(urlMap[url]);
      if (ind !== -1) {
        urlArr.splice(ind, 1);
        return delete urlMap[url];
      }
    }
  };

  updateUI = function() {
    var item, _i, _len;
    console.log("TEMPLATES");
    console.log(Handlebars.templates);
    $(".active-peer-sites").empty();
    urlArr.sort(function(a, b) {
      return a.peer_count - b.peer_count;
    });
    for (_i = 0, _len = urlArr.length; _i < _len; _i++) {
      item = urlArr[_i];
      $(".active-peer-sites").prepend(peer_template({
        "url": item.url,
        "peer_count": item.peer_count
      }));
    }
    if (urlArr.length === 0) {
      return $(".active-peer-sites").prepend("<p>You're the first! Click the bookmarklet on any site. We can recommend <a href='http://www.google.com' target='_blank'>Google</a>, or <a href='http://www.xkcd.com' target='_blank'>xkcd</a>, or any other!</p>");
    }
  };

  $(document).ready(function() {
    var socket;
    console.log(Handlebars.templates);
    peer_template = Handlebars.templates["active_peer_site"];
    socket = io.connect('//chatternets.herokuapp.com');
    socket.on('peer_urls', function(data) {
      var item, _i, _len;
      console.log(data);
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        updateItem(item[0], item[1]);
      }
      return updateUI();
    });
    socket.on('peer-connected', function(data) {
      updateItem(data.url, data.peer_count);
      updateUI();
      return console.log(data);
    });
    return socket.on('peer-disconnected', function(data) {
      updateItem(data.url, data.peer_count);
      updateUI();
      return console.log(data);
    });
  });

}).call(this);
